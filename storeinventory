import java.util.Arrays;

class Product {
    String productName;
    String productID;
    String category;
    double price;
    boolean inStock;

    public Product(String productName, String productID, String category, double price) {
        this.productName = productName;
        this.productID = productID;
        this.category = category;
        this.price = price;
        this.inStock = true; // New product is initially in stock
    }

    public boolean isInStock() {
        return inStock;
    }

    public void setInStock(boolean inStock) {
        this.inStock = inStock;
    }
}

class StoreInventory {
    String[] products;
    String date;

    Product[] items;

    public StoreInventory() {
        this.items = new Product[10];
    }

    public String getProductName(String identifier) {
        for (Product item : items) {
            if (item != null && item.productID.equals(identifier)) {
                return item.productName;
            }
        }
        return "Product not found";
    }

    public void addNewProduct(Product newProduct) {
        // Add a new product to the inventory
        for (int i = 0; i < items.length; i++) {
            if (items[i] == null) {
                items[i] = newProduct;
                break;
            }
        }
    }

    public void removeProduct(String identifier) {
        // Remove a product from inventory based on the productID
        for (int i = 0; i < items.length; i++) {
            if (items[i] != null && items[i].productID.equals(identifier)) {
                items[i].setInStock(false);
                items[i] = null;
                break;
            }
        }
    }

    public boolean orderNewProduct() {
        // In Stock
        return true;
    }

    public void stockProduct(Product product) {
        // New Product Added
        for (int i = 0; i < items.length; i++) {
            if (items[i] == null) {
                items[i] = product;
                break;
            }
        }
    }
    public static void main(String[] args) {
        StoreInventory storeInventory = new StoreInventory();

        // Creating products
        Product product1 = new Product("Chewing Gum", "125", "Snacks", 1.99);
        Product product2 = new Product("Snickers", "250", "Candy", 2.49);
        Product product3 = new Product("M&M's", "425", "Candy", 2.99);
        Product product4 = new Product("Kit Kat", "200", "Chocolate", 1.99);
        Product product5 = new Product("Skittles", "330", "Candy", 1.49);
        Product product6 = new Product("Doritos", "325", "Snacks", 2.99);
        Product product7 = new Product("Bottled Water", "270", "Beverage", 0.99);

        // Adding products to the store inventory
        storeInventory.addNewProduct(product1);
        storeInventory.addNewProduct(product2);
        storeInventory.addNewProduct(product3);
        storeInventory.addNewProduct(product4);
        storeInventory.addNewProduct(product5);
        storeInventory.addNewProduct(product6);
        storeInventory.addNewProduct(product7);

        System.out.println("Product Details:");
        System.out.println("Product Name: " + product1.productName);
        System.out.println("Product ID: " + product1.productID);
        System.out.println("Category: " + product1.category);
        System.out.println("Price: " + product1.price);

        // Checking if the product is in stock
        System.out.println("Is the product in stock? " + product1.isInStock());

        // Removing a product from inventory
        storeInventory.removeProduct("125");

        // Checking if the product is in stock after removal
        System.out.println("Is the product in stock after removal? " + product1.isInStock());
    }
}
