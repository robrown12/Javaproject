
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StoreInventory {
    private Map<String, Product> products;
    private List<String> notifications;

    public StoreInventory() {
        products = new HashMap<>();
        notifications = new ArrayList<>();
    }

    public void createProduct(String productID, String productName, Date expiryDate, int timeDurationForMarkDown) {
        if (productID == null || productName == null) {
            System.out.println("ProductID and ProductName are required.");
            return;
        }

        if (products.containsKey(productID)) {
            System.out.println("Product with the same ProductID already exists.");
            return;
        }

        if (expiryDate == null) {
            // Default expiry date is 3 months from the current date
            expiryDate = new Date(System.currentTimeMillis() + 3L * 30L * 24L * 60L * 60L * 1000L);
        }

        if (timeDurationForMarkDown == 0) {
            // Default markdown duration is 6 days before the expiry date
            timeDurationForMarkDown = 6;
        }

        Product newProduct = new Product(productID, productName, expiryDate, timeDurationForMarkDown);
        products.put(productID, newProduct);
        System.out.println(productName + " with ProductID " + productID + " created successfully.");
    }

    public void checkProductExpiry() {
        Date currentDate = new Date();
        for (Product product : products.values()) {
            if (product.getExpiryDate().before(currentDate)) {
                String notification = product.getProductName() + " with ProductID " + product.getProductID() + " has expired.";
                notifications.add(notification);
                System.out.println(notification);
            }
        }
    }

    public void checkMarkDownProducts() {
        Date currentDate = new Date();
        for (Product product : products.values()) {
            Date markdownDate = new Date(product.getExpiryDate().getTime() - product.getTimeDurationForMarkDown() * 24L * 60L * 60L * 1000L);
            if (currentDate.after(markdownDate)) {
                String notification = product.getProductName() + " with ProductID " + product.getProductID() + " needs to be marked down.";
                notifications.add(notification);
                System.out.println(notification);
            }
        }
    }

    public void displayNotifications() {
        if (notifications.isEmpty()) {
            System.out.println("No notifications available.");
        } else {
            System.out.println("Notifications:");
            for (String notification : notifications) {
                System.out.println(notification);
            }
        }
    }

    public static void main(String[] args) {
        StoreInventory storeInventory = new StoreInventory();

        storeInventory.createProduct("125", "Chewing Gum", null, 0);
        storeInventory.createProduct("250", "M&Ms", null, 6);
        storeInventory.createProduct("425", "Kit Kat", null, 6);
        storeInventory.createProduct("200", "Snickers", null, 6);
        storeInventory.createProduct("330", "Skittles", null, 6);
        storeInventory.createProduct("270", "Bottled water", null, 0);
        storeInventory.createProduct("325", "Doritos", null, 0);
        
        storeInventory.checkProductExpiry();
        storeInventory.checkMarkDownProducts();
        storeInventory.displayNotifications();
    }
}

class Product {
    private String productID;
    private String productName;
    private Date expiryDate;
    private int timeDurationForMarkDown;

    public Product(String productID, String productName, Date expiryDate, int timeDurationForMarkDown) {
        this.productID = productID;
        this.productName = productName;
        this.expiryDate = expiryDate;
        this.timeDurationForMarkDown = timeDurationForMarkDown;
    }

    public String getProductID() {
        return productID;
    }

    public String getProductName() {
        return productName;
    }

    public Date getExpiryDate() {
        return expiryDate;
    }

    public int getTimeDurationForMarkDown() {
        return timeDurationForMarkDown;
    }
}
